{"ast":null,"code":"import _toConsumableArray from \"/Users/dakotarhodes/Documents/git/tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/dakotarhodes/Documents/git/tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SENDING_CRED, SENDING_CRED_SUCCESS, SENDING_CRED_FAIL, FETCH_START, FETCH_SUCCESS, FETCH_FAIL, USER_START, USER_SUCCESS, USER_FAIL, POST_START, POST_FAIL, POST_SUCCESS, DELETE_ITEM, DELETE_ITEM_FAILURE, DELETE_ITEM_SUCCESS, PASSID } from '../actions';\nvar initialState = {\n  tech: [],\n  fetching: false,\n  sending_login_creds: false,\n  auth: {\n    token: '',\n    user_id: '',\n    message: '',\n    user_name: ''\n  },\n  users: [],\n  err: '',\n  passedItem: {}\n};\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SENDING_CRED:\n      return _objectSpread({}, state, {\n        sending_login_creds: true\n      });\n\n    case SENDING_CRED_SUCCESS:\n      return _objectSpread({}, state, {\n        sending_login_creds: false,\n        auth: action.payload\n      });\n\n    case SENDING_CRED_FAIL:\n      return _objectSpread({}, state, {\n        sending_login_creds: false,\n        err: action.payload\n      });\n\n    case FETCH_START:\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case FETCH_SUCCESS:\n      return _objectSpread({}, state, {\n        fetching: false,\n        tech: action.payload\n      });\n\n    case FETCH_FAIL:\n      return _objectSpread({}, state, {\n        fetching: false,\n        err: action.payload\n      });\n\n    case USER_START:\n      return _objectSpread({}, state, {\n        gettingUser: true\n      });\n\n    case USER_SUCCESS:\n      return _objectSpread({}, state, {\n        gettingUser: false,\n        users: action.payload\n      });\n\n    case USER_FAIL:\n      return _objectSpread({}, state, {\n        gettingUser: false,\n        err: action.payload\n      });\n\n    case POST_START:\n      return _objectSpread({}, state, {\n        posting: true\n      });\n\n    case POST_SUCCESS:\n      return _objectSpread({}, state, {\n        posting: false,\n        tech: [].concat(_toConsumableArray(state.tech), [_objectSpread({}, action.payload)])\n      });\n\n    case POST_FAIL:\n      return _objectSpread({}, state, {\n        posting: false,\n        err: action.payload\n      });\n\n    case DELETE_ITEM:\n      return _objectSpread({}, state, {\n        deletingItem: true,\n        error: null\n      });\n\n    case DELETE_ITEM_SUCCESS:\n      return _objectSpread({}, state, {\n        deletingItem: false,\n        error: null\n      });\n\n    case DELETE_ITEM_FAILURE:\n      return _objectSpread({}, state, {\n        deletingItem: false,\n        error: action.payload\n      });\n\n    case PASSID:\n      return _objectSpread({}, state, {\n        passedItem: _objectSpread({}, state.passedItem, action.payload)\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};","map":{"version":3,"sources":["/Users/dakotarhodes/Documents/git/tech/src/reducers/index.js"],"names":["SENDING_CRED","SENDING_CRED_SUCCESS","SENDING_CRED_FAIL","FETCH_START","FETCH_SUCCESS","FETCH_FAIL","USER_START","USER_SUCCESS","USER_FAIL","POST_START","POST_FAIL","POST_SUCCESS","DELETE_ITEM","DELETE_ITEM_FAILURE","DELETE_ITEM_SUCCESS","PASSID","initialState","tech","fetching","sending_login_creds","auth","token","user_id","message","user_name","users","err","passedItem","reducer","state","action","type","payload","gettingUser","posting","deletingItem","error"],"mappings":"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","sourcesContent":["import {SENDING_CRED, SENDING_CRED_SUCCESS, SENDING_CRED_FAIL, FETCH_START, FETCH_SUCCESS, FETCH_FAIL, USER_START, USER_SUCCESS, USER_FAIL, POST_START, POST_FAIL, POST_SUCCESS, DELETE_ITEM,DELETE_ITEM_FAILURE,DELETE_ITEM_SUCCESS, PASSID} from '../actions'\n\nconst initialState = {\n    tech: [],\n    fetching: false,\n    sending_login_creds: false,\n    auth: {\n        token: '',\n        user_id: '',\n        message: '',\n        user_name: '',\n    },\n    users: [],\n    err: '',\n    passedItem: {},\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type){\n        case SENDING_CRED:\n            return({\n                ...state,\n                sending_login_creds: true,\n            })\n        case SENDING_CRED_SUCCESS:\n            return({\n                ...state,\n                sending_login_creds: false,\n                auth: action.payload,\n            })\n        case SENDING_CRED_FAIL:\n            return({\n                ...state,\n                sending_login_creds: false,\n                err: action.payload,\n            })\n        case FETCH_START:\n            return({\n                ...state,\n                fetching: true,\n            })\n        case FETCH_SUCCESS:\n            return({\n                ...state,\n                fetching: false,\n                tech: action.payload,\n            })\n        case FETCH_FAIL:\n            return({\n                ...state,\n                fetching: false,\n                err: action.payload,\n            })\n        case USER_START:\n            return({\n                ...state,\n                gettingUser: true,\n            })\n        case USER_SUCCESS:\n            return({\n                ...state,\n                gettingUser: false,\n                users: action.payload,\n            })\n        case USER_FAIL:\n            return({\n                ...state,\n                gettingUser: false,\n                err: action.payload,\n            })\n        case POST_START:\n            return({\n                ...state,\n                posting: true,\n            })\n        case POST_SUCCESS:\n            return({\n                ...state,\n                posting: false,\n                tech: [...state.tech, {...action.payload}],\n            })\n        case POST_FAIL:\n            return({\n                ...state,\n                posting: false,\n                err: action.payload,\n            })\n        case DELETE_ITEM:\n            return {\n                ...state,\n                deletingItem: true,\n                error: null\n            }\n        case DELETE_ITEM_SUCCESS:\n            return {\n                ...state,\n                deletingItem: false,\n                error: null\n            }\n        case DELETE_ITEM_FAILURE:\n            return {\n                ...state,\n                deletingItem: false,\n                error: action.payload\n            }\n        case PASSID:\n            return{\n                ...state,\n                passedItem: {...state.passedItem, ...action.payload},\n            }\n        \n        default:\n            return({\n                ...state,\n            })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}