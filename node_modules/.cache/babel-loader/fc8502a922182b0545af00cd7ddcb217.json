{"ast":null,"code":"import axios from 'axios';\nimport axiosWithAuth from '../utils/authAxios';\nexport var SENDING_CRED = 'SENDING_CRED';\nexport var SENDING_CRED_SUCCESS = 'SENDING_CRED_SUCCESS';\nexport var SENDING_CRED_FAIL = 'SENDING_CRED_FAIL';\nexport var FETCH_START = 'FETCH_START';\nexport var FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport var FETCH_FAIL = 'FETCH_FAIL';\nexport var USER_START = 'USER_START';\nexport var USER_SUCCESS = 'USER_SUCCESS';\nexport var USER_FAIL = 'USER_FAIL';\nexport var POST_START = 'POST_START';\nexport var POST_SUCCESS = 'POST_SUCCESS';\nexport var POST_FAIL = 'POST_FAIL';\nexport var DELETE_ITEM = 'DELETE_ITEM';\nexport var DELETE_ITEM_SUCCESS = 'DELETE_ITEM_SUCCESS';\nexport var DELETE_ITEM_FAILURE = 'DELETE_ITEM_FAILURE';\nexport var PASSID = 'PASSID';\nexport var PUT_START = 'PUT_START';\nexport var PUT_SUCCESS = 'PUT_SUCCESS';\nexport var PUT_FAIL = 'PUT_FAIL';\nexport var sendingCred = function sendingCred(cred) {\n  return function (dispatch) {\n    dispatch({\n      type: SENDING_CRED\n    });\n    return axios.post(\"https://usemytechstuff.herokuapp.com/api/auth/login\", cred).then(function (res) {\n      localStorage.setItem(\"token\", res.data.token);\n      dispatch({\n        type: SENDING_CRED_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: SENDING_CRED_FAIL\n      });\n    });\n  };\n};\nexport var getItems = function getItems() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_START\n    });\n    axios.get(\"https://usemytechstuff.herokuapp.com/api/tech\").then(function (res) {\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: FETCH_FAIL,\n        payload: err\n      });\n    });\n  };\n};\nexport var getUsers = function getUsers(id) {\n  return function (dispatch) {\n    dispatch({\n      type: USER_START\n    });\n    axios.get(\"https://usemytechstuff.herokuapp.com/api/users/\".concat(id)).then(function (res) {\n      dispatch({\n        type: USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: USER_FAIL,\n        payload: err\n      });\n    });\n  };\n};\nexport var postListing = function postListing(listing) {\n  return function (dispatch) {\n    dispatch({\n      type: POST_START\n    });\n    axiosWithAuth().post(\"https://usemytechstuff.herokuapp.com/api/tech\", listing).then(function (res) {\n      dispatch({\n        type: POST_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: POST_FAIL,\n        payload: err\n      });\n    });\n  };\n};\nexport var deleteItem = function deleteItem(id) {\n  return function (dispatch) {\n    dispatch({\n      type: DELETE_ITEM\n    });\n    return axiosWithAuth().delete(\"https://usemytechstuff.herokuapp.com/api/tech/\".concat(id)).then(function () {\n      getItems();\n      dispatch({\n        type: DELETE_ITEM_SUCCESS\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: DELETE_ITEM_FAILURE,\n        payload: err\n      });\n    });\n  };\n};\nexport var passItem = function passItem(item) {\n  console.table(item);\n  return {\n    type: PASSID,\n    payload: item\n  };\n};\nexport var editPost = function editPost(edit) {\n  return function (dispatch) {\n    dispatch({\n      type: PUT_START\n    });\n    axiosWithAuth().put(\"https://usemytechstuff.herokuapp.com/api/tech/\".concat(edit.id), edit).then(function (res) {\n      dispatch({\n        type: PUT_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: PUT_FAIL,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dakotarhodes/Documents/git/tech/src/actions/index.js"],"names":["axios","axiosWithAuth","SENDING_CRED","SENDING_CRED_SUCCESS","SENDING_CRED_FAIL","FETCH_START","FETCH_SUCCESS","FETCH_FAIL","USER_START","USER_SUCCESS","USER_FAIL","POST_START","POST_SUCCESS","POST_FAIL","DELETE_ITEM","DELETE_ITEM_SUCCESS","DELETE_ITEM_FAILURE","PASSID","PUT_START","PUT_SUCCESS","PUT_FAIL","sendingCred","cred","dispatch","type","post","then","res","localStorage","setItem","data","token","payload","catch","err","getItems","get","getUsers","id","postListing","listing","deleteItem","delete","passItem","item","console","table","editPost","edit","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport axiosWithAuth from '../utils/authAxios'\n\nexport const SENDING_CRED = 'SENDING_CRED'\nexport const SENDING_CRED_SUCCESS = 'SENDING_CRED_SUCCESS'\nexport const SENDING_CRED_FAIL = 'SENDING_CRED_FAIL'\n\nexport const FETCH_START = 'FETCH_START'\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\nexport const FETCH_FAIL = 'FETCH_FAIL'\n\nexport const USER_START = 'USER_START'\nexport const USER_SUCCESS = 'USER_SUCCESS'\nexport const USER_FAIL = 'USER_FAIL'\n\nexport const POST_START = 'POST_START'\nexport const POST_SUCCESS = 'POST_SUCCESS'\nexport const POST_FAIL = 'POST_FAIL'\n\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const DELETE_ITEM_SUCCESS = 'DELETE_ITEM_SUCCESS';\nexport const DELETE_ITEM_FAILURE = 'DELETE_ITEM_FAILURE';\n\nexport const PASSID = 'PASSID'\n\nexport const PUT_START = 'PUT_START'\nexport const PUT_SUCCESS = 'PUT_SUCCESS'\nexport const PUT_FAIL = 'PUT_FAIL'\n\n\nexport const sendingCred = (cred) => dispatch =>  {\n    dispatch({\n        type: SENDING_CRED,\n    })\n\n    return axios\n    .post(\"https://usemytechstuff.herokuapp.com/api/auth/login\", cred)\n    .then(res => {\n        localStorage.setItem(\"token\", res.data.token)\n        dispatch({\n            type: SENDING_CRED_SUCCESS,\n            payload: res.data,\n        })\n\n    })\n    .catch(err => {\n        dispatch({\n            type: SENDING_CRED_FAIL,\n        })\n    })\n}\n\nexport const getItems = () => dispatch => {\n    dispatch({\n        type: FETCH_START,\n    })\n\n    axios\n    .get(`https://usemytechstuff.herokuapp.com/api/tech`)\n    .then(res => {\n        dispatch({\n            type: FETCH_SUCCESS,\n            payload: res.data,\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: FETCH_FAIL,\n            payload: err,\n        })\n    })\n}\n\nexport const getUsers = (id) => dispatch => {\n    dispatch({\n        type: USER_START,\n    })\n\n    axios\n    .get(`https://usemytechstuff.herokuapp.com/api/users/${id}`)\n    .then(res => {\n        dispatch({\n            type: USER_SUCCESS,\n            payload: res.data,\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: USER_FAIL,\n            payload: err,\n        })\n    })\n}\n\nexport const postListing = (listing) => dispatch => {\n    dispatch({\n        type: POST_START,\n    })\n\n    axiosWithAuth()\n    .post(`https://usemytechstuff.herokuapp.com/api/tech`, listing)\n    .then(res => {\n        dispatch({\n            type: POST_SUCCESS,\n            payload: res.data,\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: POST_FAIL,\n            payload: err,\n        })\n    })\n}\n\n\nexport const deleteItem = (id) => dispatch => {\n    dispatch({ type: DELETE_ITEM })\n\n    return axiosWithAuth()\n        .delete(`https://usemytechstuff.herokuapp.com/api/tech/${id}`)\n        .then(() => {\n            getItems();\n            dispatch({ type: DELETE_ITEM_SUCCESS })\n        })\n        .catch(err => {\n            dispatch({ type: DELETE_ITEM_FAILURE, payload: err })\n        })\n}\n\nexport const passItem = item => {\n    console.table(item);\n    return(\n        {\n        type: PASSID,\n        payload: item,\n    })\n\n}\n\nexport const editPost = (edit) => dispatch => {\n\n    dispatch({\n        type: PUT_START,\n    })\n\n    axiosWithAuth()\n    .put(`https://usemytechstuff.herokuapp.com/api/tech/${edit.id}`, edit)\n    .then(res => {\n        dispatch({\n            type: PUT_SUCCESS,\n            payload: res.data,\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: PUT_FAIL,\n            payload: err,\n        })\n    })\n}\n"]},"metadata":{},"sourceType":"module"}