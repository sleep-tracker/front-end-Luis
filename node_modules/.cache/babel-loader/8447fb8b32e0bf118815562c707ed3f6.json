{"ast":null,"code":"import _objectSpread from \"/Users/dakotarhodes/Documents/git/tech/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SENDING_CRED, SENDING_CRED_SUCCESS, SENDING_CRED_FAIL, FETCH_START, FETCH_SUCCESS, FETCH_FAIL } from '../actions';\nvar initialState = {\n  tech: [],\n  fetching: false,\n  sending_login_creds: false,\n  auth: [{\n    token: '',\n    user_id: '',\n    message: '',\n    user_name: ''\n  }],\n  err: ''\n};\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SENDING_CRED:\n      return _objectSpread({}, state, {\n        sending_login_creds: true\n      });\n\n    case SENDING_CRED_SUCCESS:\n      return _objectSpread({}, state, {\n        sending_login_creds: false,\n        auth: action.payload\n      });\n\n    case SENDING_CRED_FAIL:\n      return _objectSpread({}, state, {\n        sending_login_creds: false,\n        err: action.payload\n      });\n\n    case FETCH_START:\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case FETCH_SUCCESS:\n      return _objectSpread({}, state, {\n        fetching: false,\n        auth: action.payload\n      });\n\n    case FETCH_FAIL:\n      return _objectSpread({}, state, {\n        fetching: false,\n        err: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};","map":{"version":3,"sources":["/Users/dakotarhodes/Documents/git/tech/src/reducers/index.js"],"names":["SENDING_CRED","SENDING_CRED_SUCCESS","SENDING_CRED_FAIL","FETCH_START","FETCH_SUCCESS","FETCH_FAIL","initialState","tech","fetching","sending_login_creds","auth","token","user_id","message","user_name","err","reducer","state","action","type","payload"],"mappings":";AAAA,SAAQA,YAAR,EAAsBC,oBAAtB,EAA4CC,iBAA5C,EAA+DC,WAA/D,EAA4EC,aAA5E,EAA2FC,UAA3F,QAA4G,YAA5G;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,QAAQ,EAAE,KAFO;AAGjBC,EAAAA,mBAAmB,EAAE,KAHJ;AAIjBC,EAAAA,IAAI,EAAE,CAAC;AACHC,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,OAAO,EAAE,EAFN;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHC,IAAAA,SAAS,EAAE;AAJR,GAAD,CAJW;AAUjBC,EAAAA,GAAG,EAAE;AAVY,CAArB;AAaA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,YAAL;AACI,+BACOiB,KADP;AAEIR,QAAAA,mBAAmB,EAAE;AAFzB;;AAIJ,SAAKR,oBAAL;AACI,+BACOgB,KADP;AAEIR,QAAAA,mBAAmB,EAAE,KAFzB;AAGIC,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAHjB;;AAKJ,SAAKlB,iBAAL;AACI,+BACOe,KADP;AAEIR,QAAAA,mBAAmB,EAAE,KAFzB;AAGIM,QAAAA,GAAG,EAAEG,MAAM,CAACE;AAHhB;;AAKJ,SAAKjB,WAAL;AACI,+BACOc,KADP;AAEIT,QAAAA,QAAQ,EAAE;AAFd;;AAIJ,SAAKJ,aAAL;AACI,+BACOa,KADP;AAEIT,QAAAA,QAAQ,EAAE,KAFd;AAGIE,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAHjB;;AAKJ,SAAKf,UAAL;AACI,+BACOY,KADP;AAEIT,QAAAA,QAAQ,EAAE,KAFd;AAGIO,QAAAA,GAAG,EAAEG,MAAM,CAACE;AAHhB;;AAKJ;AACI,+BACOH,KADP;AApCR;AAyCH,CA1CM","sourcesContent":["import {SENDING_CRED, SENDING_CRED_SUCCESS, SENDING_CRED_FAIL, FETCH_START, FETCH_SUCCESS, FETCH_FAIL} from '../actions'\n\nconst initialState = {\n    tech: [],\n    fetching: false,\n    sending_login_creds: false,\n    auth: [{\n        token: '',\n        user_id: '',\n        message: '',\n        user_name: '',\n    }],\n    err: '',\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type){\n        case SENDING_CRED:\n            return({\n                ...state,\n                sending_login_creds: true,\n            })\n        case SENDING_CRED_SUCCESS:\n            return({\n                ...state,\n                sending_login_creds: false,\n                auth: action.payload,\n            })\n        case SENDING_CRED_FAIL:\n            return({\n                ...state,\n                sending_login_creds: false,\n                err: action.payload,\n            })\n        case FETCH_START:\n            return({\n                ...state,\n                fetching: true,\n            })\n        case FETCH_SUCCESS:\n            return({\n                ...state,\n                fetching: false,\n                auth: action.payload,\n            })\n        case FETCH_FAIL:\n            return({\n                ...state,\n                fetching: false,\n                err: action.payload,\n            })\n        default:\n            return({\n                ...state,\n            })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}